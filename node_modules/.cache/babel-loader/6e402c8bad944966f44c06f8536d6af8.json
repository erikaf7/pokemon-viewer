{"ast":null,"code":"var _jsxFileName = \"/Users/erikafomich/code/pokemon-viewer/pokemon-viewer/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [pokemon, setPokemon] = useState(\"bulbasaur\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const [pokemonID, setPokemonID] = useState(\"\");\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [pokemonType, setPokemonType] = useState(\"\");\n  const [pokemonType2, setPokemonType2] = useState(\"\");\n\n  const getPokemon = async () => {\n    const toArray = [];\n\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\n      const res = await axios.get(url);\n      toArray.push(res.data);\n      setPokemonID(res.data.id);\n      setPokemonName(res.data.name);\n      setPokemonType(res.data.types[0].type.name);\n\n      if (res.data.types.length > 1) {\n        setPokemonType2(res.data.types[1].type.name);\n      } else {\n        setPokemonType2(\"\");\n      }\n\n      setPokemonData(toArray);\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = e => {\n    setPokemon(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getPokemon();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pok\\xE9mon Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          placeholder: \"Type a Pok\\xE9mon...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), pokemonData.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID - \", pokemonID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name - \", pokemonName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type - \", pokemonType, \" \", pokemonType2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TD7O9UjmFnNHr/YbSs9iO0G37Kw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/erikafomich/code/pokemon-viewer/pokemon-viewer/src/App.js"],"names":["React","useEffect","useState","axios","App","pokemon","setPokemon","pokemonData","setPokemonData","pokemonID","setPokemonID","pokemonName","setPokemonName","pokemonType","setPokemonType","pokemonType2","setPokemonType2","getPokemon","toArray","url","res","get","push","data","id","name","types","type","length","console","log","e","handleChange","target","value","toLowerCase","handleSubmit","preventDefault","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [pokemon, setPokemon] = useState(\"bulbasaur\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const [pokemonID, setPokemonID] = useState(\"\");\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [pokemonType, setPokemonType] = useState(\"\");\n  const [pokemonType2, setPokemonType2] = useState(\"\");\n\n\n  const getPokemon = async () => {\n    const toArray = [];\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`\n      const res = await axios.get(url)\n      toArray.push(res.data)\n      setPokemonID(res.data.id)\n      setPokemonName(res.data.name)\n      setPokemonType(res.data.types[0].type.name)\n      if(res.data.types.length > 1){\n        setPokemonType2(res.data.types[1].type.name)\n\n      }else {\n        setPokemonType2(\"\")\n      }\n      setPokemonData(toArray)\n      console.log(res)\n    } catch (e){\n      console.log(e)\n    }\n  }\n\n  const handleChange = (e) => {\n    setPokemon(e.target.value.toLowerCase())\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getPokemon()\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Pokémon Viewer</h1>\n      </header>\n      <form onSubmit = {handleSubmit}>\n        <label>\n          <input type=\"text\" onChange = {handleChange} placeholder=\"Type a Pokémon...\"/>\n        </label>\n      </form>\n      {}\n      {pokemonData.map((data) => {\n        return(\n          <div className=\"container\">\n            <img />\n            <p>ID - {pokemonID}</p>\n            <p>Name - {pokemonName}</p>\n            <p>Type - {pokemonType} {pokemonType2}</p>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}